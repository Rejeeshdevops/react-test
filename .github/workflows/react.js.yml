name: Deploy React App to S3

on:
  push:
    branches:
      - master  # Change branch if needed

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: ðŸš€ Checkout Code
      uses: actions/checkout@v4

    - name: ðŸ”§ Use Node.js LTS
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # LTS version recommended

    - name: ðŸ“¦ Install PNPM
      run: npm install -g pnpm

    - name: âš¡ Restore PNPM Cache
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: ðŸ“¦ Install Dependencies
      run: pnpm install --frozen-lockfile

    - name: ðŸŽ¯ Build React App
      run: pnpm run build

    - name: ðŸ“‚ Verify Build Output
      run: |
        echo "Checking build directory..."
        ls -al ./build || ls -al ./dist || (echo "Build directory is missing!" && exit 1)

    - name: ðŸš€ Deploy to S3
      run: |
        if [ -z "${{ secrets.S3_BUCKET }}" ]; then
          echo "Error: S3_BUCKET secret is not set."
          exit 1
        fi
        aws s3 sync ./build s3://${{ secrets.S3_BUCKET }} --exact-timestamps --delete --region ${{ secrets.AWS_REGION }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}

    - name: ðŸ”„ Invalidate CloudFront Cache
      run: |
        if [ -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "Error: CLOUDFRONT_DISTRIBUTION_ID secret is not set."
          exit 1
        fi
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
