name: Deploy React App to S3

on:
  push:
    branches:
      - master  # Change branch if needed

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: ðŸš€ Checkout Code
      uses: actions/checkout@v4

    - name: ðŸ”§ Use Node.js LTS with Corepack (Better PNPM Management)
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # LTS version recommended
        cache: 'pnpm'

    - name: ðŸ”§ Enable Corepack & Activate PNPM
      run: |
        corepack enable
        corepack prepare pnpm@latest --activate

    - name: ðŸ›  Debug PNPM Installation
      run: |
        echo "Node.js Version: $(node -v)"
        echo "Corepack Version: $(corepack --version || echo 'Corepack not found')"
        echo "Checking PNPM Path: $(which pnpm || echo 'PNPM not found in PATH')"
        echo "PNPM Version: $(pnpm --version || echo 'PNPM installation failed')"

    - name: âš¡ Restore PNPM Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.pnpm-store
          .pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: ðŸ“¦ Install Dependencies (Skip if Cache Hit)
      run: pnpm install --frozen-lockfile

    - name: ðŸ”„ Detect Changed Files (More Reliable)
      id: changed-files
      uses: tj-actions/changed-files@v44
      with:
        json: true

    - name: ðŸŽ¯ Build Only If Needed (More Accurate)
      if: steps.changed-files.outputs.any_changed == 'true'
      run: pnpm build

    - name: ðŸš€ Deploy Only If Build Exists
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        aws s3 sync ./build s3://${{ secrets.S3_BUCKET }} --exact-timestamps --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

    - name: ðŸ”„ Invalidate CloudFront Cache
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
