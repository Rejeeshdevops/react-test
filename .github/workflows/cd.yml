name: CD - Deploy React App to S3

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI - Build and Test React App"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: 🚀 Checkout Code
      uses: actions/checkout@v4

    - name: 📥 Download Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: extract_dir

    - name: 📂 Extract and Verify Build Files
      run: |
        mkdir -p build_output
        unzip extract_dir/build-artifact.zip -d build_output
        tar -xzf build_output/build.tar.gz -C build_output
        echo "✅ Build extracted successfully!"

    - name: 📂 List Extracted Files (Debugging)
      run: ls -R build_output

    - name: 🛠 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: 🚀 Deploy to S3
      run: |
        if [ -z "${{ secrets.S3_BUCKET }}" ]; then
          echo "❌ Error: S3_BUCKET secret is not set."
          exit 1
        fi
        aws s3 sync build_output/dist s3://${{ secrets.S3_BUCKET }} --exact-timestamps --delete --cache-control "no-cache, no-store, must-revalidate"
        echo "✅ Successfully deployed to S3!"

    - name: 🔄 Invalidate CloudFront Cache
      run: |
        if [ -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "❌ Error: CLOUDFRONT_DISTRIBUTION_ID secret is not set."
          exit 1
        fi
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        echo "✅ CloudFront cache invalidated!"
